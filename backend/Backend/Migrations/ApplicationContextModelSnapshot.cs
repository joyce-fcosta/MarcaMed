// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Domain.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("DATE");

                    b.Property<int>("IdExame")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<long>("Protocolo")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdExame");

                    b.HasIndex("IdPaciente");

                    b.ToTable("MarcaConsulta", (string)null);
                });

            modelBuilder.Entity("Backend.Domain.Exame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTipoExame")
                        .HasColumnType("int");

                    b.Property<string>("NomeExame")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("ObservacaoameExame")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoExame");

                    b.ToTable("Exame", (string)null);
                });

            modelBuilder.Entity("Backend.Domain.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("VARCHAR(11)");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(11)");

                    b.HasKey("Id");

                    b.ToTable("Paciente", (string)null);
                });

            modelBuilder.Entity("Backend.Domain.TipoExame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoTipoExame")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("NomeTipoExame")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoExame", (string)null);
                });

            modelBuilder.Entity("Backend.Domain.Consulta", b =>
                {
                    b.HasOne("Backend.Domain.Exame", "Exame")
                        .WithMany()
                        .HasForeignKey("IdExame")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exame");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Backend.Domain.Exame", b =>
                {
                    b.HasOne("Backend.Domain.TipoExame", "TipoExame")
                        .WithMany()
                        .HasForeignKey("IdTipoExame")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TipoExame");
                });
#pragma warning restore 612, 618
        }
    }
}
